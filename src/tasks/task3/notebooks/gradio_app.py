# -*- coding: utf-8 -*-
"""gradio_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wPp6cjLy3LMOLWY_TdMArWCMSup6JZOu
"""





##***********************************************************************************
## Gradio application for the Night Club & Bar Advisor using crew ai
## Contributor: Thomas James
## Date: 13th June 2024
##***********************************************************************************

import os
from crewai import Crew
from advisor_agents import Night_Life_Advisor
from advisor_tasks import Advisor_Tasks
import gradio as gr

from dotenv import load_dotenv
load_dotenv()

class Advisor_Crew:
    def __init__(self, origin, destination, interests, questions):
        self.origin = origin
        self.destination = destination
        self.interests = interests
        self.questions = questions
        self.answers = {}

    def ask_questions(self):
        for key, question in self.questions:
            self.answers[key] = ""
        return self.questions

    def get_answers(self, answers):
        self.answers = {key: value for (key, _), value in zip(self.questions, answers)}
        return self.answers

    def run(self):
        agents = Night_Life_Advisor()
        tasks = Advisor_Tasks()

        energy_level_advisor_agent = agents.energy_level()
        musical_genre_and_culture_advisor_agent = agents.musical_genre_and_culture()
        dancing_style_preference_advisor_agent = agents.dancing_style_preference()


        energy_level_assessment_task = tasks.energy_level_assessment_task(
        energy_level_advisor_agent,
        self.origin,
        self.destination,
        self.answers,
        )

        musical_genre_and_culture_identification_task = tasks.musical_genre_and_culture_identification_task(
        musical_genre_and_culture_advisor_agent,
        self.origin,
        self.destination,
        self.interests
        )

        dancing_preference_assessment_task = tasks.dancing_preference_assessment_task(
        dancing_style_preference_advisor_agent,
        self.origin,
        self.destination,
        self.interests
        )

        crew = Crew(
        agents=[
            energy_level_advisor_agent, musical_genre_and_culture_advisor_agent, dancing_style_preference_advisor_agent
        ],
        tasks=[energy_level_assessment_task, musical_genre_and_culture_identification_task, dancing_preference_assessment_task],
        full_output=True,
        verbose=2,
        output_log_file=True,
        )

        result = crew.kickoff()
        return result

questions = [
            ("total_energy_level","On a scale of 1 to 10, how energetic do you feel tonight? Are you looking for a high-energy night out with lots of dancing, or something more chill? Would you enjoy a place where you can engage in activities like games or karaoke, or do you prefer to just unwind? Are you interested in socializing with a lively crowd, or do you prefer a quieter environment where you can have deeper conversations? Are you in the mood for a high-energy club with loud music and a big crowd, or a more low-key bar with a relaxed vibe? Do you prefer a vibrant and bustling atmosphere or a cozy and intimate setting tonight?"),
            ("mood","How would you describe your current mood? Are you feeling adventurous and spontaneous; romantic and intimate; casual and low-key; playful and fun; sophisticated and classy; social and outgoing; artsy and creative; quiet and reflective; festive and celebratory; nostalgic and retro; sporty and competitve; or intellectual and thoughtful?"),
            ("social_energy","How social are you feeling tonight? Do you want to be in a lively crowd or somewhere more relaxed? Are you in the mood to meet new people or just hang out with your friends? Do you feel like being in a busy, energetic place or a quieter, more laid-back spot? How much interaction are you comfortable with tonight; a lot, some, of just a little?"),
            ("cultural_background","Are there any particular types of music or dance from your culture that you enjoy and would like to experience here in Paris? Do you have any favorite types of food or drinks that you usually look for when going out? Is there a specific atmosphere that you find comfortable or enjoyable based on your cultural background? Would you like to visit places where your native language is spoken or where you can meet people from your cultural background? Are you interested in bars or clubs that host cultural events or themed nights related to your heritage?"),
            ("music_genre","What type of music do you enjoy the most? Do you enjoy live music shows, or do you prefer DJ sets that keep the party going all night? What type of music gets you excited to go out? For example, do you love dancing to electronic beats, or are you more into the smooth sounds of jazz? Are you looking for a venue where you can sit back and enjoy the music, or do you want a place with a dance floor to let loose?"),
            ("dancing_preferred","When you think about going out, do you imagine yourself dancing the night away or sitting back and enjoying the music? Are you interested in venues that offer a mix of dancing and socializing areas, so you have options depending on how you feel? Do you enjoy watching live performances and seeing other people dance, even if you don't feel like dancing yourself? Would you be open to visiting a place that has dance lessons or themed dance nights to try something new? How do you feel about going to places with energetic dance floors versus more laid-back lounges?"),
            ("dancing_style","Do you prefer structured dance styles like ballroom or more free-form styles like contemporary or hip-hop? Do you like large, energetic dance floors or more intimate, cozy spots for dancing? Are you comfortable dancing in crowded venues, or do you prefer places with more personal space? Would you be interested in places that offer dance lessons or have themed dance nights?"),
            ("watching_sports","Do you have favorite teams or leagues that you follow closely? Do you enjoy the energy of a crowded sports bar, or do you prefer a more relaxed environment? Would you like to be in a place where you can meet and chat with other sports fans? Are you interested in attending bars that host special game nights or sports-themed events?"),
            ("how_much_drinking","Do you like venues that cater to group drinking, like those offering pitchers or bottle service? Are you looking for places where you can meet and socialize with other drinkers? Do you enjoy bars with additional entertainment, like live music, karaoke, or games? What types of drinks do you prefer? Cocktails, beer, wine, or spirits? Do you enjoy trying new and exotic drinks? Do you prefer a lively, party atmosphere or a more relaxed setting for drinking?"),
            ("personal_background","Are there any cultural elements or themes that you enjoy in a nightlife setting, such as specific music genres, cuisines, or drinks? Do you have a preference for places that celebrate or reflect your cultural heritage? Can you describe a memorable night out you’ve had in the past? What made it special for you? Is there anything specific you’re looking to experience while exploring the nightlife in Paris? Do you prefer venues that attract a certain type of crowd, such as professionals, students, or a mix? Are there any factors that make you feel more comfortable and safe while enjoying a night out?"),
        ]

def process_form(origin, destination, interests, *answers):

    advisor_crew = Advisor_Crew(origin, destination, interests, questions)
    advisor_crew.get_answers(answers)

    # Check if at least 6 answers are non-empty
    count_non_empty = sum(1 for value in answers if value)
    if count_non_empty >= 6:
        result = advisor_crew.run()
        task_outputs = result.get('tasks_outputs', [])
        advice = []
        headers = ['Energy Levels','Musical Genres & Cultures','Dancing Styles']
        for header, task_output in zip(headers, task_outputs):
            advice.append(f"**{header}**: {task_output.raw_output}")
        return "\n\n".join(advice)
    else:
        return "Please provide at least 9 responses to the questions."

iface = gr.Interface(
    fn=process_form,
    inputs=[
        gr.Textbox(label="Where are you currently located?", placeholder="Enter your origin"),
        gr.Textbox(label="Where do you wish to travel in Paris?", placeholder="Enter your destination"),
        gr.Textbox(label="What are your interests?", placeholder="Enter your interests"),
        *[gr.Textbox(label=question, placeholder=f"Answer for {question}") for _, question in questions]
    ],
    outputs="markdown",
    title="Nightlife Club & Bar Advisor",
    description="Answer these questions to receive advice on energy-levels, musical cultures, and dancing styles for your trip to Paris.",

)

iface.launch()